{"ast":null,"code":"var _jsxFileName = \"/Users/cool_dude/web project/NPTEL QUIZ PRACTICE/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport DataContext from '../context/dataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s();\n\n  var _question$options;\n\n  const {\n    showQuiz,\n    quizs,\n    checkAnswer,\n    correctAnswer,\n    selectedAnswer,\n    questionIndex,\n    nextQuestion,\n    showTheResult\n  } = useContext(DataContext);\n  const [randomQuestions, setRandomQuestions] = useState([]);\n  useEffect(() => {\n    // Function to select random 50 questions\n    const selectRandomQuestions = () => {\n      const shuffledQuestions = quizs.sort(() => 0.5 - Math.random()); // Shuffle the questions array\n\n      const selectedQuestions = shuffledQuestions.slice(0, 50); // Get the first 50 questions\n\n      setRandomQuestions(selectedQuestions);\n    };\n\n    selectRandomQuestions(); // Call the function to select random questions when the component mounts\n  }, [quizs]); // Trigger the effect whenever the quizs array changes\n\n  const question = randomQuestions[questionIndex];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-dark text-white\",\n    style: {\n      display: `${showQuiz ? 'block' : 'none'}`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row vh-100 align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-4\",\n            style: {\n              background: '#3d3d3d',\n              borderColor: '#646464'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between gap-md-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-2 fs-normal lh-base\",\n                children: question === null || question === void 0 ? void 0 : question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  color: '#60d600',\n                  width: '100px',\n                  textAlign: 'right'\n                },\n                children: [questionIndex + 1, \" / \", randomQuestions === null || randomQuestions === void 0 ? void 0 : randomQuestions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: question === null || question === void 0 ? void 0 : (_question$options = question.options) === null || _question$options === void 0 ? void 0 : _question$options.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `option w-100 text-start btn text-white py-2 px-3 mt-3 rounded btn-dark ${correctAnswer === item && 'bg-success'}`,\n                onClick: event => checkAnswer(event, item),\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), questionIndex + 1 !== randomQuestions.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn py-2 w-100 mt-3 bg-primary text-light fw-bold\",\n              onClick: nextQuestion,\n              disabled: !selectedAnswer,\n              children: \"Next Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn py-2 w-100 mt-3 bg-primary text-light fw-bold\",\n              onClick: showTheResult,\n              disabled: !selectedAnswer,\n              children: \"Show Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"Vq4NHusfo+To4hly9nK1xr4wyTM=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/cool_dude/web project/NPTEL QUIZ PRACTICE/src/components/Quiz.js"],"names":["React","useContext","useEffect","useState","DataContext","Quiz","showQuiz","quizs","checkAnswer","correctAnswer","selectedAnswer","questionIndex","nextQuestion","showTheResult","randomQuestions","setRandomQuestions","selectRandomQuestions","shuffledQuestions","sort","Math","random","selectedQuestions","slice","question","display","background","borderColor","color","width","textAlign","length","options","map","item","index","event"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport DataContext from '../context/dataContext';\n\nconst Quiz = () => {\n    const { showQuiz, quizs, checkAnswer, correctAnswer, selectedAnswer, questionIndex, nextQuestion, showTheResult } = useContext(DataContext);\n    const [randomQuestions, setRandomQuestions] = useState([]);\n\n    useEffect(() => {\n        // Function to select random 50 questions\n        const selectRandomQuestions = () => {\n            const shuffledQuestions = quizs.sort(() => 0.5 - Math.random()); // Shuffle the questions array\n            const selectedQuestions = shuffledQuestions.slice(0, 50); // Get the first 50 questions\n            setRandomQuestions(selectedQuestions);\n        };\n\n        selectRandomQuestions(); // Call the function to select random questions when the component mounts\n    }, [quizs]); // Trigger the effect whenever the quizs array changes\n\n    const question = randomQuestions[questionIndex];\n\n    return (\n        <section className=\"bg-dark text-white\" style={{ display: `${showQuiz ? 'block' : 'none'}` }}>\n            <div className=\"container\">\n                <div className=\"row vh-100 align-items-center justify-content-center\">\n                    <div className=\"col-lg-8\">\n                        <div className=\"card p-4\" style={{ background: '#3d3d3d', borderColor: '#646464' }}>\n                            <div className=\"d-flex justify-content-between gap-md-3\">\n                                <h5 className='mb-2 fs-normal lh-base'>{question?.question}</h5>\n                                <h5 style={{ color: '#60d600', width: '100px', textAlign: 'right' }}>{questionIndex + 1} / {randomQuestions?.length}</h5>\n                            </div>\n                            <div>\n                                {\n                                    question?.options?.map((item, index) => (\n                                        <button\n                                            key={index}\n                                            className={`option w-100 text-start btn text-white py-2 px-3 mt-3 rounded btn-dark ${correctAnswer === item && 'bg-success'}`}\n                                            onClick={(event) => checkAnswer(event, item)}\n                                        >\n                                            {item}\n                                        </button>\n                                    ))\n                                }\n                            </div>\n                            {\n                                (questionIndex + 1) !== randomQuestions.length ?\n                                    <button className='btn py-2 w-100 mt-3 bg-primary text-light fw-bold' onClick={nextQuestion} disabled={!selectedAnswer}>Next Question</button>\n                                    :\n                                    <button className='btn py-2 w-100 mt-3 bg-primary text-light fw-bold' onClick={showTheResult} disabled={!selectedAnswer}>Show Result</button>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}