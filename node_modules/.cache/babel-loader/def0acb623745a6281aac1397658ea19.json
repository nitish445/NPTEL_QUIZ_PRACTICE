{"ast":null,"code":"var _jsxFileName = \"/Users/cool_dude/web project/NPTEL QUIZ PRACTICE/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport DataContext from '../context/dataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s();\n\n  const {\n    showQuiz,\n    quizs,\n    checkAnswer,\n    correctAnswer,\n    selectedAnswer,\n    nextQuestion,\n    showTheResult\n  } = useContext(DataContext);\n  const [randomQuestions, setRandomQuestions] = useState([]);\n  useEffect(() => {\n    // Randomize 50 questions\n    if (quizs.length > 0) {\n      const shuffledQuestions = shuffleArray(quizs).slice(0, 50);\n      setRandomQuestions(shuffledQuestions);\n    }\n  }, [quizs]);\n\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n  };\n\n  const currentQuestion = randomQuestions.length > 0 ? randomQuestions[0] : null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-dark text-white\",\n    style: {\n      display: `${showQuiz ? 'block' : 'none'}`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row vh-100 align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-4\",\n            style: {\n              background: '#3d3d3d',\n              borderColor: '#646464'\n            },\n            children: currentQuestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between gap-md-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-2 fs-normal lh-base\",\n                  children: currentQuestion.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  style: {\n                    color: '#60d600',\n                    width: '100px',\n                    textAlign: 'right'\n                  },\n                  children: [randomQuestions.indexOf(currentQuestion) + 1, \" / \", randomQuestions.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: currentQuestion.options.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `option w-100 text-start btn text-white py-2 px-3 mt-3 rounded btn-dark ${correctAnswer === item && 'bg-success'}`,\n                  onClick: event => checkAnswer(event, item),\n                  children: item\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this), randomQuestions.length > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn py-2 w-100 mt-3 bg-primary text-light fw-bold\",\n                onClick: nextQuestion,\n                disabled: !selectedAnswer,\n                children: \"Next Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn py-2 w-100 mt-3 bg-primary text-light fw-bold\",\n                onClick: showTheResult,\n                disabled: !selectedAnswer,\n                children: \"Show Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"EsDbZ27mJacw34s/BzJ8tbN2k8w=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/cool_dude/web project/NPTEL QUIZ PRACTICE/src/components/Quiz.js"],"names":["React","useContext","useEffect","useState","DataContext","Quiz","showQuiz","quizs","checkAnswer","correctAnswer","selectedAnswer","nextQuestion","showTheResult","randomQuestions","setRandomQuestions","length","shuffledQuestions","shuffleArray","slice","array","i","j","Math","floor","random","currentQuestion","display","background","borderColor","question","color","width","textAlign","indexOf","options","map","item","index","event"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport DataContext from '../context/dataContext';\n\nconst Quiz = () => {\n    const { showQuiz, quizs, checkAnswer, correctAnswer, selectedAnswer, nextQuestion, showTheResult } = useContext(DataContext);\n    const [randomQuestions, setRandomQuestions] = useState([]);\n\n    useEffect(() => {\n        // Randomize 50 questions\n        if (quizs.length > 0) {\n            const shuffledQuestions = shuffleArray(quizs).slice(0, 50);\n            setRandomQuestions(shuffledQuestions);\n        }\n    }, [quizs]);\n\n    const shuffleArray = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    };\n\n    const currentQuestion = randomQuestions.length > 0 ? randomQuestions[0] : null;\n\n    return (\n        <section className=\"bg-dark text-white\" style={{ display: `${showQuiz ? 'block' : 'none'}` }}>\n            <div className=\"container\">\n                <div className=\"row vh-100 align-items-center justify-content-center\">\n                    <div className=\"col-lg-8\">\n                        <div className=\"card p-4\" style={{ background: '#3d3d3d', borderColor: '#646464' }}>\n                            {currentQuestion && (\n                                <>\n                                    <div className=\"d-flex justify-content-between gap-md-3\">\n                                        <h5 className='mb-2 fs-normal lh-base'>{currentQuestion.question}</h5>\n                                        <h5 style={{ color: '#60d600', width: '100px', textAlign: 'right' }}>{randomQuestions.indexOf(currentQuestion) + 1} / {randomQuestions.length}</h5>\n                                    </div>\n                                    <div>\n                                        {currentQuestion.options.map((item, index) => (\n                                            <button\n                                                key={index}\n                                                className={`option w-100 text-start btn text-white py-2 px-3 mt-3 rounded btn-dark ${correctAnswer === item && 'bg-success'}`}\n                                                onClick={(event) => checkAnswer(event, item)}\n                                            >\n                                                {item}\n                                            </button>\n                                        ))}\n                                    </div>\n                                    {randomQuestions.length > 1 ? (\n                                        <button className='btn py-2 w-100 mt-3 bg-primary text-light fw-bold' onClick={nextQuestion} disabled={!selectedAnswer}>\n                                            Next Question\n                                        </button>\n                                    ) : (\n                                        <button className='btn py-2 w-100 mt-3 bg-primary text-light fw-bold' onClick={showTheResult} disabled={!selectedAnswer}>\n                                            Show Result\n                                        </button>\n                                    )}\n                                </>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}