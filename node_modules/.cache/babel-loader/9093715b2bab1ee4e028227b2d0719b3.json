{"ast":null,"code":"var _jsxFileName = \"/Users/cool_dude/web project/NPTEL QUIZ PRACTICE/src/context/dataContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // All Quizs, Current Question, Index of Current Question, Answer, Selected Answer, Total Marks\n  const [quizs, setQuizs] = useState([]);\n  const [question, setQuesion] = useState({});\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [marks, setMarks] = useState(0); // Display Controlling States\n\n  const [showStart, setShowStart] = useState(true);\n  const [showQuiz, setShowQuiz] = useState(false);\n  const [showResult, setShowResult] = useState(false); // Load JSON Data\n\n  useEffect(() => {\n    fetch('quiz.json').then(res => res.json()).then(data => setQuizs(data));\n  }, []); // Set a Single Question\n\n  useEffect(() => {\n    if (quizs.length > questionIndex) {\n      setQuesion(quizs[questionIndex]);\n    }\n  }, [quizs, questionIndex]); // Start Quiz\n\n  const startQuiz = () => {\n    setShowStart(false);\n    setShowQuiz(true);\n  }; // Check Answer\n\n\n  const checkAnswer = (event, selected) => {\n    if (!selectedAnswer) {\n      setCorrectAnswer(question.answer);\n      setSelectedAnswer(selected);\n\n      if (selected === question.answer) {\n        event.target.classList.add('bg-success');\n        setMarks(marks + 2);\n      } else {\n        event.target.classList.add('bg-danger');\n      }\n    }\n  }; // Next Quesion\n\n\n  const nextQuestion = () => {\n    setCorrectAnswer('');\n    setSelectedAnswer('');\n    const wrongBtn = document.querySelector('button.bg-danger');\n    wrongBtn === null || wrongBtn === void 0 ? void 0 : wrongBtn.classList.remove('bg-danger');\n    const rightBtn = document.querySelector('button.bg-success');\n    rightBtn === null || rightBtn === void 0 ? void 0 : rightBtn.classList.remove('bg-success');\n    setQuestionIndex(questionIndex + 1);\n  }; // Show Result\n\n\n  const showTheResult = () => {\n    setShowResult(true);\n    setShowStart(false);\n    setShowQuiz(false);\n  }; // Start Over\n\n\n  const startOver = () => {\n    setShowStart(false);\n    setShowResult(false);\n    setShowQuiz(true);\n    setCorrectAnswer('');\n    setSelectedAnswer('');\n    setQuestionIndex(0);\n    setMarks(0);\n    const wrongBtn = document.querySelector('button.bg-danger');\n    wrongBtn === null || wrongBtn === void 0 ? void 0 : wrongBtn.classList.remove('bg-danger');\n    const rightBtn = document.querySelector('button.bg-success');\n    rightBtn === null || rightBtn === void 0 ? void 0 : rightBtn.classList.remove('bg-success');\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      startQuiz,\n      showStart,\n      showQuiz,\n      question,\n      quizs,\n      checkAnswer,\n      correctAnswer,\n      selectedAnswer,\n      questionIndex,\n      nextQuestion,\n      showTheResult,\n      showResult,\n      marks,\n      startOver\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataProvider, \"02uR+awcGZNnRElwCyiY43lLDg8=\");\n\n_c = DataProvider;\nexport default DataContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["/Users/cool_dude/web project/NPTEL QUIZ PRACTICE/src/context/dataContext.js"],"names":["createContext","useEffect","useState","DataContext","DataProvider","children","quizs","setQuizs","question","setQuesion","questionIndex","setQuestionIndex","correctAnswer","setCorrectAnswer","selectedAnswer","setSelectedAnswer","marks","setMarks","showStart","setShowStart","showQuiz","setShowQuiz","showResult","setShowResult","fetch","then","res","json","data","length","startQuiz","checkAnswer","event","selected","answer","target","classList","add","nextQuestion","wrongBtn","document","querySelector","remove","rightBtn","showTheResult","startOver"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,MAAMI,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACtC;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,UAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC,CAP0C,CAS1C;;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,KAAD,CAA5C,CAZ0C,CAc1C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,KAAK,CAAC,WAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIrB,QAAQ,CAACqB,IAAD,CAFxB;AAGD,GAJQ,EAIN,EAJM,CAAT,CAf0C,CAqB1C;;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,CAACuB,MAAN,GAAenB,aAAnB,EAAkC;AAChCD,MAAAA,UAAU,CAACH,KAAK,CAACI,aAAD,CAAN,CAAV;AACD;AACF,GAJQ,EAIN,CAACJ,KAAD,EAAQI,aAAR,CAJM,CAAT,CAtB0C,CA4B1C;;AACA,QAAMoB,SAAS,GAAG,MAAM;AACtBX,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD,CA7B0C,CAkC1C;;;AACA,QAAMU,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACvC,QAAI,CAACnB,cAAL,EAAqB;AACnBD,MAAAA,gBAAgB,CAACL,QAAQ,CAAC0B,MAAV,CAAhB;AACAnB,MAAAA,iBAAiB,CAACkB,QAAD,CAAjB;;AAEA,UAAIA,QAAQ,KAAKzB,QAAQ,CAAC0B,MAA1B,EAAkC;AAChCF,QAAAA,KAAK,CAACG,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,YAA3B;AACApB,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,OAHD,MAGO;AACLgB,QAAAA,KAAK,CAACG,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,WAA3B;AACD;AACF;AACF,GAZD,CAnC0C,CAiD1C;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzBzB,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACA,UAAMwB,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAjB;AACAF,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEH,SAAV,CAAoBM,MAApB,CAA2B,WAA3B;AACA,UAAMC,QAAQ,GAAGH,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAjB;AACAE,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEP,SAAV,CAAoBM,MAApB,CAA2B,YAA3B;AACA/B,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,GARD,CAlD0C,CA4D1C;;;AACA,QAAMkC,aAAa,GAAG,MAAM;AAC1BrB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAJD,CA7D0C,CAmE1C;;;AACA,QAAMwB,SAAS,GAAG,MAAM;AACtB1B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAR,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAJ,IAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACAM,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACA,UAAMsB,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAjB;AACAF,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEH,SAAV,CAAoBM,MAApB,CAA2B,WAA3B;AACA,UAAMC,QAAQ,GAAGH,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAjB;AACAE,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEP,SAAV,CAAoBM,MAApB,CAA2B,YAA3B;AACD,GAZD;;AAaE,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBZ,MAAAA,SADyB;AACfZ,MAAAA,SADe;AACLE,MAAAA,QADK;AACIZ,MAAAA,QADJ;AACaF,MAAAA,KADb;AACmByB,MAAAA,WADnB;AAC+BnB,MAAAA,aAD/B;AAEzBE,MAAAA,cAFyB;AAEVJ,MAAAA,aAFU;AAEI4B,MAAAA,YAFJ;AAEiBM,MAAAA,aAFjB;AAE+BtB,MAAAA,UAF/B;AAE0CN,MAAAA,KAF1C;AAGzB6B,MAAAA;AAHyB,KAA7B;AAAA,cAKKxC;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1FM;;GAAMD,Y;;KAAAA,Y;AA4Fb,eAAeD,WAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nconst DataContext = createContext({});\n\nexport const DataProvider = ({children}) => {\n      // All Quizs, Current Question, Index of Current Question, Answer, Selected Answer, Total Marks\n  const [quizs, setQuizs] = useState([]);\n  const [question, setQuesion] = useState({});\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [marks, setMarks] = useState(0);\n\n  // Display Controlling States\n  const [showStart, setShowStart] = useState(true);\n  const [showQuiz, setShowQuiz] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n\n  // Load JSON Data\n  useEffect(() => {\n    fetch('quiz.json')\n      .then(res => res.json())\n      .then(data => setQuizs(data))\n  }, []);\n\n  // Set a Single Question\n  useEffect(() => {\n    if (quizs.length > questionIndex) {\n      setQuesion(quizs[questionIndex]);\n    }\n  }, [quizs, questionIndex])\n\n  // Start Quiz\n  const startQuiz = () => {\n    setShowStart(false);\n    setShowQuiz(true);\n  }\n\n  // Check Answer\n  const checkAnswer = (event, selected) => {\n    if (!selectedAnswer) {\n      setCorrectAnswer(question.answer);\n      setSelectedAnswer(selected);\n\n      if (selected === question.answer) {\n        event.target.classList.add('bg-success');\n        setMarks(marks + 2 );\n      } else {\n        event.target.classList.add('bg-danger');\n      }\n    }\n  }\n\n  // Next Quesion\n  const nextQuestion = () => {\n    setCorrectAnswer('');\n    setSelectedAnswer('');\n    const wrongBtn = document.querySelector('button.bg-danger');\n    wrongBtn?.classList.remove('bg-danger');\n    const rightBtn = document.querySelector('button.bg-success');\n    rightBtn?.classList.remove('bg-success');\n    setQuestionIndex(questionIndex + 1);\n  }\n\n  // Show Result\n  const showTheResult = () => {\n    setShowResult(true);\n    setShowStart(false);\n    setShowQuiz(false);\n  }\n\n  // Start Over\n  const startOver = () => {\n    setShowStart(false);\n    setShowResult(false);\n    setShowQuiz(true);\n    setCorrectAnswer('');\n    setSelectedAnswer('');\n    setQuestionIndex(0);\n    setMarks(0);\n    const wrongBtn = document.querySelector('button.bg-danger');\n    wrongBtn?.classList.remove('bg-danger');\n    const rightBtn = document.querySelector('button.bg-success');\n    rightBtn?.classList.remove('bg-success');\n  }\n    return (\n        <DataContext.Provider value={{\n            startQuiz,showStart,showQuiz,question,quizs,checkAnswer,correctAnswer,\n            selectedAnswer,questionIndex,nextQuestion,showTheResult,showResult,marks,\n            startOver\n        }} >\n            {children}\n        </DataContext.Provider>\n    );\n}\n\nexport default DataContext;\n\n"]},"metadata":{},"sourceType":"module"}