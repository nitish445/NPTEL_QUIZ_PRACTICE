{"ast":null,"code":"var _jsxFileName = \"/Users/cool_dude/web project/NPTEL QUIZ PRACTICE/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport DataContext from '../context/dataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s();\n\n  var _randomQuizs$question, _randomQuizs$question2, _randomQuizs$question3;\n\n  const {\n    question,\n    quizs,\n    checkAnswer,\n    correctAnswer,\n    selectedAnswer,\n    questionIndex,\n    nextQuestion,\n    showTheResult\n  } = useContext(DataContext);\n  const [randomQuizs, setRandomQuizs] = useState([]);\n  useEffect(() => {\n    // Shuffle the original quizs array\n    const shuffledQuizs = [...quizs].sort(() => Math.random() - 0.5); // Select the first 50 questions\n\n    setRandomQuizs(shuffledQuizs.slice(0, 50));\n  }, [quizs]); // Run only once when quizs changes\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-dark text-white\",\n    style: {\n      display: `${showQuiz ? 'block' : 'none'}`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row vh-100 align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-4\",\n            style: {\n              background: '#3d3d3d',\n              borderColor: '#646464'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between gap-md-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-2 fs-normal lh-base\",\n                children: (_randomQuizs$question = randomQuizs[questionIndex]) === null || _randomQuizs$question === void 0 ? void 0 : _randomQuizs$question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  color: '#60d600',\n                  width: '100px',\n                  textAlign: 'right'\n                },\n                children: [questionIndex + 1, \" / \", randomQuizs === null || randomQuizs === void 0 ? void 0 : randomQuizs.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: (_randomQuizs$question2 = randomQuizs[questionIndex]) === null || _randomQuizs$question2 === void 0 ? void 0 : (_randomQuizs$question3 = _randomQuizs$question2.options) === null || _randomQuizs$question3 === void 0 ? void 0 : _randomQuizs$question3.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `option w-100 text-start btn text-white py-2 px-3 mt-3 rounded btn-dark ${correctAnswer === item && 'bg-success'}`,\n                onClick: event => checkAnswer(event, item),\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), questionIndex + 1 !== randomQuizs.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn py-2 w-100 mt-3 bg-primary text-light fw-bold\",\n              onClick: nextQuestion,\n              disabled: !selectedAnswer,\n              children: \"Next Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn py-2 w-100 mt-3 bg-primary text-light fw-bold\",\n              onClick: showTheResult,\n              disabled: !selectedAnswer,\n              children: \"Show Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"T1nw1mWE8ZOmN6WXxgFd6ha8DxU=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/cool_dude/web project/NPTEL QUIZ PRACTICE/src/components/Quiz.js"],"names":["React","useContext","useEffect","useState","DataContext","Quiz","question","quizs","checkAnswer","correctAnswer","selectedAnswer","questionIndex","nextQuestion","showTheResult","randomQuizs","setRandomQuizs","shuffledQuizs","sort","Math","random","slice","display","showQuiz","background","borderColor","color","width","textAlign","length","options","map","item","index","event"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport DataContext from '../context/dataContext';\n\nconst Quiz = () => {\n  const { question, quizs, checkAnswer, correctAnswer, selectedAnswer, questionIndex, nextQuestion, showTheResult } = useContext(DataContext);\n  const [randomQuizs, setRandomQuizs] = useState([]);\n\n  useEffect(() => {\n    // Shuffle the original quizs array\n    const shuffledQuizs = [...quizs].sort(() => Math.random() - 0.5);\n    // Select the first 50 questions\n    setRandomQuizs(shuffledQuizs.slice(0, 50));\n  }, [quizs]); // Run only once when quizs changes\n\n  return (\n    <section className=\"bg-dark text-white\" style={{ display: `${showQuiz ? 'block' : 'none'}` }}>\n      <div className=\"container\">\n        <div className=\"row vh-100 align-items-center justify-content-center\">\n          <div className=\"col-lg-8\">\n            <div className=\"card p-4\" style={{ background: '#3d3d3d', borderColor: '#646464' }}>\n              <div className=\"d-flex justify-content-between gap-md-3\">\n                <h5 className='mb-2 fs-normal lh-base'>{randomQuizs[questionIndex]?.question}</h5>\n                <h5 style={{ color: '#60d600', width: '100px', textAlign: 'right' }}>{questionIndex + 1} / {randomQuizs?.length}</h5>\n              </div>\n              <div>\n                {\n                  randomQuizs[questionIndex]?.options?.map((item, index) => (\n                    <button\n                      key={index}\n                      className={`option w-100 text-start btn text-white py-2 px-3 mt-3 rounded btn-dark ${correctAnswer === item && 'bg-success'}`}\n                      onClick={(event) => checkAnswer(event, item)}\n                    >\n                      {item}\n                    </button>\n                  ))\n                }\n              </div>\n\n              {\n                (questionIndex + 1) !== randomQuizs.length ? (\n                  <button className='btn py-2 w-100 mt-3 bg-primary text-light fw-bold' onClick={nextQuestion} disabled={!selectedAnswer}>Next Question</button>\n                ) : (\n                  <button className='btn py-2 w-100 mt-3 bg-primary text-light fw-bold' onClick={showTheResult} disabled={!selectedAnswer}>Show Result</button>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}